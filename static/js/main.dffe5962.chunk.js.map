{"version":3,"sources":["Components/TodoItem.js","Components/TodoForm.js","Components/TodoList.js","App.js","index.js"],"names":["TodoItem","props","handleRemove","bind","handleEdit","handleChange","handleCancel","handleUpdate","handleDone","state","editMode","editedItem","description","done","evt","this","setState","status","removeItem","id","target","name","value","preventDefault","editItem","className","onSubmit","htmlFor","type","onChange","parentid","onClick","item","Component","uuid","require","TodoForm","handleSubmit","handleFocus","handleBlur","itemState","addItem","previousSibling","classList","add","remove","onFocus","onBlur","TodoList","list","prevState","document","getElementById","filter","listItem","itemId","newItem","editedItems","map","key","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.dffe5962.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './TodoItem.css';\n\nclass TodoItem extends Component {\n  constructor(props){\n    super(props);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.state = {\n      editMode: false,\n      editedItem: this.props.description,\n      done: false\n    }\n  }\n  handleEdit(evt){\n    this.setState({editMode: !this.state.editMode})\n  }\n\n  handleDone(evt){\n    this.setState({status: !this.state.status})\n  }\n\n  handleRemove(evt){\n    this.props.removeItem(this.props.id)\n  }\n\n  handleChange(evt){\n    this.setState({\n      [evt.target.name]: evt.target.value\n    })\n  }\n\n  handleCancel(evt){\n    this.setState({editMode: false})\n  }\n\n  handleUpdate(evt){\n    evt.preventDefault();\n    this.props.editItem(this.props.id, this.state.editedItem)\n    this.setState({editMode: false})\n  }\n\n  render(){\n    return(\n      <div className={this.state.editMode ? \"TodoItem TodoItem--edit\" : \"TodoItem\"} id={this.props.id}>\n          {!this.state.editMode ?\n            <p onClick={this.handleDone} className={!this.state.status ? \"TodoItem--description\" : \"TodoItem--description_done\"}>{this.props.item}</p>\n          :\n          <div className=\"TodoItem--edit_input\">\n          <form onSubmit={this.handleUpdate} className=\"TodoItem--form_edit\">\n            <div className=\"TodoItem--input_container\">\n              <label className=\"TodoItem--label\" htmlFor=\"edit-item\">Edit Item</label>\n              <input\n                type=\"text\"\n                name=\"editedItem\"\n                id=\"edit-item\"\n                onChange={this.handleChange}\n                parentid={this.props.id}\n                value={this.state.editedItem}\n                className=\"TodoItem--input\"\n              />\n            </div>\n              <button className=\"TodoItem--button_save\">Save</button>\n              <i className=\"material-icons\" onClick={this.handleCancel}>close</i>\n            </form>\n          </div>\n        }\n        {!this.state.editMode ?\n          <div className=\"TodoItem--icons\">\n            <i onClick={this.handleEdit} className=\"material-icons edit\">edit</i>\n            <i onClick={this.handleRemove} className=\"material-icons delete\">delete</i>\n          </div>\n          : null }\n      </div>\n    )\n  }\n}\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport './TodoForm.css';\nconst uuid = require('uuid/v4');\n\n\nclass TodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.state = {\n      description: ''\n    }\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    const itemState = {...this.state, id: uuid()}\n    this.props.addItem(itemState)\n    this.setState({\n      description: ''\n    })\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    })\n  }\n\n  handleFocus(evt){\n  evt.target.previousSibling.classList.add('active')\n  }\n\n  handleBlur(evt){\n    if(evt.target.value === \"\") {\n      evt.target.previousSibling.classList.remove('active')\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"TodoForm\">\n        <form className=\"TodoForm--form\" onSubmit={this.handleSubmit}>\n          <div className=\"TodoForm--input_container\">\n            <label className=\"TodoForm--label\" htmlFor=\"new-item\">Add New Item</label>\n            <input\n              className=\"TodoForm--input\"\n              type=\"text\"\n              name=\"description\"\n              id=\"new-item\"\n              value={this.state.description}\n              onChange={this.handleChange}\n              onFocus={this.handleFocus}\n              onBlur={this.handleBlur}\n            />\n          </div>\n          <button className=\"TodoForm--button\"><i className=\"material-icons\">add</i></button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default TodoForm;\n","import React, { Component } from 'react';\nimport './TodoList.css';\nimport TodoItem from './TodoItem.js';\nimport TodoForm from './TodoForm.js';\n\nclass TodoList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      list: []\n    }\n    this.addItem = this.addItem.bind(this)\n    this.removeItem = this.removeItem.bind(this)\n    this.editItem = this.editItem.bind(this)\n  }\n\n  addItem(item) {\n    this.setState(prevState => {\n      return { list: [...prevState.list, item] };\n    })\n  }\n\n  removeItem(item){\n    let thisItem = document.getElementById(item);\n    this.setState({list: this.state.list.filter((listItem) => {\n        return listItem.id !== item;\n    })});\n  }\n\n  editItem(itemId, newItem) {\n    const editedItems = this.state.list.map(item => {\n      if(item.id === itemId){\n        return {...item, description: newItem}\n      }\n        return item;\n    })\n\n    this.setState({ list: editedItems })\n\n  }\n\n  render() {\n    return (\n      <div className=\"TodoList\">\n        <h1 className=\"TodoList--title\"> To-do List </h1>\n        {this.state.list.map(item => {\n          return <TodoItem\n                    key={item.id}\n                    id={item.id}\n                    item={item.description}\n                    removeItem={this.removeItem}\n                    editItem={this.editItem}\n                    description={item.description}\n                  />\n        })}\n        <TodoForm\n          addItem={this.addItem}\n        />\n      </div>\n    )\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}